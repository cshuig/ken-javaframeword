<?xml version="1.0" encoding="utf-8"?>
<!-- url:http://blog.csdn.net/arjick/article/details/6702268 -->
<view:BaseSimpleContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  xmlns:view="com.shine.framework.core.view.*" 
						  creationComplete="{complete()}" backgroundColor="0xffffff">
	<view:layout>
		<s:BasicLayout/>
	</view:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.shine.cofferChart.control.MainControl;
			import com.shine.cofferChart.view.ColumnCharts.ColumnChartComponet;
			import com.shine.cofferChart.view.DashboardCharts.DashboardChartComponet;
			import com.shine.cofferChart.view.LineCharts.LineChartComponet;
			import com.shine.cofferChart.view.PieCharts.PieChartComponet;
			import com.shine.framework.core.util.BaseHttpServiceUtil;
			
			import mx.controls.Alert;
			
			private var lineChartComponet:LineChartComponet=null;
			private var pieChartComponet:PieChartComponet=null;
			private var columnChartComponet:ColumnChartComponet=null;
			private var dashboradChartComponet:DashboardChartComponet=null;
			
			private function complete():void{
				this.completeLoading();
				
				MainControl.getInstance().add(this);
				
				refresh();
			}
			
			public function refresh():void{
				this.startLoading();
				getDataXml();
				this.completeLoading();
			}
			
			public function getDataXml():void{
				if(MainControl.getInstance().getString("dataUrl")!=null&&MainControl.getInstance().getString("dataUrl").length!=0){
					var baseGetHttpService:BaseHttpServiceUtil=new BaseHttpServiceUtil;
					baseGetHttpService.getResultXml(MainControl.getInstance().getString("dataUrl"),initCofferCharts,null,MainControl.getInstance().getString("cleanCache"));
				}
			}
			
			//获取xml
			public function initCofferCharts(value:XML):void{
				MainControl.getInstance().put("dataXml",value.toXMLString());
				
				if(String(value.@debug)=="on"){
					Alert.show(value.toXMLString(),"debug");
				}
				
				if(value.@autoRefreshPolicy!=null&&String(value.@autoRefreshPolicy)=="on"){
					this.autoRefreshPolicy="on";
					this.autoRefreshTime=String(value.@autoRefreshTime);
					this.autoRefreshMethod=refresh;
					this.autoRefresh();
				}
				
				initComponent();
			}
			
			
			//初始化组件
			public function initComponent():void{
				if(MainControl.getInstance().getString("type")=="lineChart"){
					if(lineChartComponet==null){
						lineChartComponet=new LineChartComponet;
						lineChartComponet.x=0;
						lineChartComponet.y=0;
						lineChartComponet.width=this.width;
						lineChartComponet.height=this.height;
						this.addElement(lineChartComponet);
					}else
						lineChartComponet.initData();
				}else if(MainControl.getInstance().getString("type")=="pieChart"){
					if(pieChartComponet==null){
						pieChartComponet=new PieChartComponet;
						pieChartComponet.x=0;
						pieChartComponet.y=0;
						pieChartComponet.width=this.width;
						pieChartComponet.height=this.height;
						this.addElement(pieChartComponet);
					}else
						pieChartComponet.initData();
				}else if(MainControl.getInstance().getString("type")=="columnChart"){
					if(columnChartComponet==null){
						columnChartComponet=new ColumnChartComponet;
						columnChartComponet.x=0;
						columnChartComponet.y=0;
						columnChartComponet.width=this.width;
						columnChartComponet.height=this.height;
						this.addElement(columnChartComponet);
					}else
						columnChartComponet.initData();
				}else if(MainControl.getInstance().getString("type")=="dashboardChart"){
					if(dashboradChartComponet==null){
						dashboradChartComponet=new DashboardChartComponet;
						dashboradChartComponet.x=0;
						dashboradChartComponet.y=0;
						dashboradChartComponet.width=this.width;
						dashboradChartComponet.height=this.height;
						this.addElement(dashboradChartComponet);
					}else
						dashboradChartComponet.initData();
				}
			}
		]]>
	</fx:Script>
</view:BaseSimpleContainer>
